<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <parent>
        <groupId>com.pb.stratus</groupId>
        <artifactId>connect</artifactId>
        <version>2019.1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.pb.stratus.connect</groupId>
    <artifactId>connect</artifactId>
    <version>2019.1.0-SNAPSHOT</version>
    <name>connect</name>
    <packaging>war</packaging>

    <build>
        <finalName>connect</finalName>
        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <!--useCache>true</useCache-->
                    <recompressZippedFiles>false</recompressZippedFiles>
                    <warSourceExcludes>help/**</warSourceExcludes>
                </configuration>

            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.4.1</version>
            </plugin>
        </plugins>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
            </testResource>
        </testResources>
    </build>
    <dependencies>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jsp-api</artifactId>
        </dependency>
        <dependency>
            <groupId>taglibs</groupId>
            <artifactId>standard</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>${mockito.version}</version>
        </dependency>
        <dependency>
            <groupId>org.tuckey</groupId>
            <artifactId>urlrewritefilter</artifactId>
        </dependency>
        <dependency>
            <groupId>com.pb.stratus.external</groupId>
            <artifactId>spatial-wsdl</artifactId>
        </dependency>
        <!-- DOJO is included in controls.war, so adding this is unnecessary -->
        <!-- and slows the build down. If in the future it isn't bundled, -->
        <!-- then we may need to re-enable this dependency to ensure that -->
        <!-- the proper dependencies are included in the final war. -->

        <!--<dependency> -->
        <!--<groupId>org.dojotoolkit</groupId> -->
        <!--<artifactId>dojo</artifactId> -->
        <!--<version>1.7.2</version> -->
        <!--<scope>runtime</scope> -->
        <!--<type>war</type> -->
        <!--</dependency> -->
        <dependency>
            <groupId>com.pb.stratus</groupId>
            <artifactId>controller</artifactId>
            <version>2019.1.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-api</artifactId>
            <version>${cxf.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-frontend-jaxrs</artifactId>
            <version>${cxf.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-bindings-soap</artifactId>
            <version>${cxf.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-ws-policy</artifactId>
            <version>${cxf.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-transports-http</artifactId>
            <version>${cxf.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-frontend-jaxws</artifactId>
            <version>${cxf.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- expressing log4j dependencies directly, as opposed to getting it transitively
            from controls -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>2.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>2.0</version>
        </dependency>

		<dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-jaxrs</artifactId>
            <version>1.9.8</version>
        </dependency>
        <!-- included for JMelody -->
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.ws.security</groupId>
            <artifactId>wss4j</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>xalan</groupId>
                    <artifactId>xalan</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
        </dependency>
        <dependency>
            <groupId>net.bull.javamelody</groupId>
            <artifactId>javamelody-core</artifactId>
            <version>1.45.0</version>
        </dependency>
        <!-- itext, option to add PDF export -->
        <dependency>
            <groupId>com.lowagie</groupId>
            <artifactId>itext</artifactId>
            <version>2.1.7</version>
            <exclusions>
                <exclusion>
                    <artifactId>bcmail-jdk14</artifactId>
                    <groupId>bouncycastle</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>bcprov-jdk14</artifactId>
                    <groupId>bouncycastle</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>bctsp-jdk14</artifactId>
                    <groupId>bouncycastle</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.thoughtworks.xstream</groupId>
            <artifactId>xstream</artifactId>
            <version>1.4.2</version>
        </dependency>
        <dependency>
            <groupId>org.jrobin</groupId>
            <artifactId>jrobin</artifactId>
            <version>1.5.9</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.1</version>
        </dependency>
        <dependency>
            <groupId>com.lmax</groupId>
            <artifactId>disruptor</artifactId>
            <version>3.0.0.beta1</version>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>prepare-analyst</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-configs</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${basedir}/target/connect/WEB-INF</outputDirectory>
                                    <overwrite>true</overwrite>
                                    <resources>
                                        <resource>
                                            <directory>
                                                ${project.parent.parent.basedir}/security/onpremsecurity/src/main/resources/connect
                                            </directory>
                                            <includes>
                                                <include>**/*.xml</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-login-page</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${basedir}/target/connect</outputDirectory>
                                    <overwrite>true</overwrite>
                                    <resources>
                                        <resource>
                                            <directory>
                                                ${project.parent.parent.basedir}/security/onpremsecurity/src/main/resources
                                            </directory>
                                            <includes>
                                                <include>login.jsp</include>
                                                <include>signIn.jsp</include>
                                                <include>registerAppLinkingUser.jsp</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-login-css</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${basedir}/target/connect/css</outputDirectory>
                                    <overwrite>true</overwrite>
                                    <resources>
                                        <resource>
                                            <directory>
                                                ${project.parent.parent.basedir}/security/onpremsecurity/src/main/resources
                                            </directory>
                                            <includes>
                                                <include>**/*.css</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>dev-analyst</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>com.pb.stratus.security</groupId>
                    <artifactId>onpremsecurity</artifactId>
                    <version>${project.version}</version>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>dev-analyst-with-docs</id>
            <dependencies>
                <dependency>
                    <groupId>com.pb.stratus.security</groupId>
                    <artifactId>onpremsecurity</artifactId>
                    <version>${project.version}</version>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>release-analyst</id>
            <build>
                <plugins>
                    <!-- FIXME: Remove this once we've fixed the dep on dojo-maven-plugin -->

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-war-plugin</artifactId>
                        <version>2.4</version>
                        <configuration>
                            <warSourceExcludes>help/**,stratus/**,connect/**,js/**</warSourceExcludes>
                            <useCache>true</useCache>
                        </configuration>
                    </plugin>
                    <!-- this plugin is used for css compression only as dojo-maven-plugin
                        is doing js compression -->
                </plugins>
            </build>
            <dependencies>
			               
                <dependency>
                    <groupId>com.pb.stratus.security</groupId>
                    <artifactId>onpremsecurity</artifactId>
                    <version>${project.version}</version>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>test</id>
            <activation>
                <property>
                    <name>environment</name>
                    <value>test</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-war-plugin</artifactId> 
                        <version>2.1-beta-1</version> <configuration> <webResources> <resource> <directory>${basedir}/test-configs</directory> 
                        <filtering>true</filtering> </resource> </webResources> </configuration> 
                        </plugin> -->
                </plugins>
            </build>
        </profile>
    </profiles>
    <properties>
        <netbeans.hint.deploy.server>Tomcat55</netbeans.hint.deploy.server>
        <connect.locate.service>winteamcity5:8050</connect.locate.service>
        <connect.adminconsole.location>winteamcity5:8040</connect.adminconsole.location>
        <customer.configuration.dir>C:\devsaasstratus2\customerconfigurations</customer.configuration.dir>
        <jstestdriver.port>1234</jstestdriver.port>
        <jstestdriver.browsers>C:/Progra~1/Internet Explorer/iexplore.exe</jstestdriver.browsers>
        <!--<spring.version>4.0.7.RELEASE</spring.version>-->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>
</project>
